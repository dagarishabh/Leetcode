/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* ans=NULL;
        ListNode* ans1=NULL;
        int carry=0;
        //ans=ans->next;
        while(1)
        {
            
            if(l1==NULL && l2==NULL && carry==0)
                break;
            else if(ans1==NULL)
            {
                ans=new ListNode((l1->val+l2->val)%10);
                ans1=ans;
                carry=l1->val+l2->val;
                carry/=10;
                l1=l1->next;
                l2=l2->next;
            }
            else if(l1==NULL && l2==NULL)
            {
                ans->next=new ListNode(carry);
                break;
            }
            else if(l1==NULL)
            {
                ans->next=new ListNode((l2->val+carry)%10);
                carry=(l2->val+carry)/10;
                ans=ans->next;
                l2=l2->next;
            }
            else if(l2==NULL)
            {
                ans->next=new ListNode((l1->val+carry)%10);
                carry=(l1->val+carry)/10;
                ans=ans->next;
                l1=l1->next;
            }
            else
            {
                int k=(l1->val+l2->val+carry);
                ans->next = new ListNode(k%10);
                carry=k/10;
                ans=ans->next;
                l1=l1->next;
                l2=l2->next;
                
            }
            //cout<<carry<<endl;
        }
        return ans1;
    }
};
